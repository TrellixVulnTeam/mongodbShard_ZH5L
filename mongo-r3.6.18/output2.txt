MongoDB shell version v3.6.18
connecting to: mongodb://10.20.16.165:50001/test?gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("8d0ff121-0004-487b-b30f-4042dcddf559") }
MongoDB server version: 3.6.18
Server has startup warnings: 
2020-06-16T11:05:20.261+0000 I CONTROL  [main] 
2020-06-16T11:05:20.261+0000 I CONTROL  [main] ** WARNING: Access control is not enabled for the database.
2020-06-16T11:05:20.261+0000 I CONTROL  [main] **          Read and write access to data and configuration is unrestricted.
2020-06-16T11:05:20.261+0000 I CONTROL  [main] ** WARNING: You are running this process as the root user, which is not recommended.
2020-06-16T11:05:20.261+0000 I CONTROL  [main] 
mongos> use [9G[Juse[12G newDB[9G[Juse newDB[18G
switched to db newDB
mongos> [9G[Juse newDB[18G[9G[Juse newDB[18G[9G[Jsh.shardCollection("newDB.newCol",{"key":1})[53G[9G[Juse admin[18G[9G[Jdb.newCol.createIndex({"key": 1 })[43G[9G[Juse newDB[18G[9G[Jsh.enableSharding("newDB")[35G[9G[Juse admin[18G[9G[Jdb.dropDatabase()[26G[9G[Jsh.status()[20G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[74G[9G[Juse newDB[18G[9G[Juse newDB[17G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[74G[9G[Jfor (var i=140000; i<150000; i++) [1;34m{[0m db.newCol.insert({key: i})  }[73G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[72G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[71G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert[1;34m([0m{key: i})  }[70G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert([1;34m{[0mkey: i})  }[69G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[68G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[67G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[66G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[65G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[64G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[63G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i[1;34m}[0m)  }[62G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i}[1;34m)[0m  }[61G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[60G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[59G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[58G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[57G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[56G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[55G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[54G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[53G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[52G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[51G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[50G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[49G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[48G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[47G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[46G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[45G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[44G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  [1;34m}[0m[43G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[42G[9G[Jfor [1;34m([0mvar i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[41G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[40G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[39G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[38G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[37G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[36G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[35G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[34G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[33G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[32G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[31G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[30G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[29G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[28G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[27G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[26G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[25G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[24G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[23G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[22G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[21G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[22G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[23G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[22G[9G[Jfor (var i=10000; i<150000; i++) { db.newCol.insert({key: i})  }[21G[9G[Jfor (var i=10000; i<150000; i++) { db.newCol.insert({key: i})  }[22G[9G[Jfor (var i=10000; i<150000; i++) { db.newCol.insert({key: i})  }[23G[9G[Jfor (var i=10000; i<150000; i++) { db.newCol.insert({key: i})  }[24G[9G[Jfor (var i=10000; i<150000; i++) { db.newCol.insert({key: i})  }[25G[9G[Jfor (var i=10000; i<150000; i++) { db.newCol.insert({key: i})  }[26G[9G[Jfor (var i=10000; i<150000; i++) { db.newCol.insert({key: i})  }[27G[9G[Jfor (var i=10000; i<150000; i++) { db.newCol.insert({key: i})  }[28G[9G[Jfor (var i=10000; i<150000; i++) { db.newCol.insert({key: i})  }[29G[9G[Jfor (var i=10000; i<150000; i++) { db.newCol.insert({key: i})  }[30G[9G[Jfor (var i=10000; i<150000; i++) { db.newCol.insert({key: i})  }[31G[9G[Jfor (var i=10000; i<10000; i++) { db.newCol.insert({key: i})  }[30G[9G[Jfor (var i=10000; i<100000; i++) { db.newCol.insert({key: i})  }[31G[9G[Jfor (var i=10000; i<100000; i++) { db.newCol.insert({key: i})  }[30G[9G[Jfor (var i=10000; i<100000; i++) { db.newCol.insert({key: i})  }[29G[9G[Jfor (var i=10000; i<100000; i++) { db.newCol.insert({key: i})  }[28G[9G[Jfor (var i=10000; i<100000; i++) { db.newCol.insert({key: i})  }[27G[9G[Jfor (var i=10000; i<100000; i++) { db.newCol.insert({key: i})  }[26G[9G[Jfor (var i=10000; i<100000; i++) { db.newCol.insert({key: i})  }[25G[9G[Jfor (var i=10000; i<100000; i++) { db.newCol.insert({key: i})  }[24G[9G[Jfor (var i=10000; i<100000; i++) { db.newCol.insert({key: i})  }[23G[9G[Jfor (var i=10000; i<100000; i++) { db.newCol.insert({key: i})  }[22G[9G[Jfor (var i=10000; i<100000; i++) { db.newCol.insert({key: i})  }[21G[9G[Jfor (var i=1000; i<100000; i++) { db.newCol.insert({key: i})  }[21G[9G[Jfor (var i=100; i<100000; i++) { db.newCol.insert({key: i})  }[21G[9G[Jfor (var i=10; i<100000; i++) { db.newCol.insert({key: i})  }[21G[9G[Jfor (var i=0; i<100000; i++) { db.newCol.insert({key: i})  }[20G[9G[Jfor (var i=0; i<100000; i++) { db.newCol.insert({key: i})  }[69G
WriteResult({ "nInserted" : 1 })
mongos> [9G[Jfor (var i=0; i<100000; i++) { db.newCol.insert({key: i})  }[69G[9G[Juse newDB[18G[9G[Juse newDB[18G[9G[Jsh.shardCollection("newDB.newCol",{"key":1})[53G[9G[Juse admin[18G[9G[Jdb.newCol.createIndex({"key": 1 })[43G[9G[Juse admin[18G[9G[Jsh.shardCollection("newDB.newCol",{"key":1})[53G[9G[Juse admin[18G[9G[Jdb.newCol.createIndex({"key": 1 })[43G[9G[Juse newDB[18G[9G[Jsh.enableSharding("newDB")[35G[9G[Juse admin[18G[9G[Jdb.dropDatabase()[26G[9G[Juse admin[18G[9G[Jsh.enableSharding("newDB")[35G[9G[Juse newDB[18G[9G[Jsh.enableSharding("newDB")[35G[9G[Juse admin[18G[9G[Jdb.dropDatabase()[26G[9G[Jsh.status()[20G[9G[Jfor (var i=140000; i<150000; i++) { db.newCol.insert({key: i})  }[74G[9G[Juse newDB[18G[9G[Jsh.status()[20G[9G[Jdb.adminCommand( {getLog: "global"} )[46G[9G[Jfor (var i=140000; i<190000; i++) { db.newCol.insert({key: i})  }[74G[9G[Jdb.adminCommand( {getLog: "global"} )[46G[9G[Jdb.adminCommand( {getLog: "global"} )[46G
{
	"totalLinesWritten" : 4640249,
	"log" : [
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6e7'), key: 99965.0 } ] }",
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6e7'), key: 99965.0 } ] }",
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6e7'), key: 99965.0 } }",
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6e7'), key: 99965.0 }",
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99965",
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159969",
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.223+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] heejjin splitIFNEED: 99965",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] heejjin get split sum : 4.99655e+09",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159968",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101185",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101185",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101185",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] heejin_ return: 159968",
		"2020-06-16T11:16:26.224+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6e8'), key: 99966.0 } ] }",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6e8'), key: 99966.0 } ] }",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6e8'), key: 99966.0 } }",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6e8'), key: 99966.0 }",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99966",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159970",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.225+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] heejjin splitIFNEED: 99966",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] heejjin get split sum : 4.99665e+09",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159969",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101220",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101220",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101220",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] heejin_ return: 159969",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6e9'), key: 99967.0 } ] }",
		"2020-06-16T11:16:26.226+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6e9'), key: 99967.0 } ] }",
		"2020-06-16T11:16:26.227+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.227+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.227+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6e9'), key: 99967.0 } }",
		"2020-06-16T11:16:26.227+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6e9'), key: 99967.0 }",
		"2020-06-16T11:16:26.227+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99967",
		"2020-06-16T11:16:26.227+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159971",
		"2020-06-16T11:16:26.227+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.227+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.227+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.227+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.227+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] heejjin splitIFNEED: 99967",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] heejjin get split sum : 4.99675e+09",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159970",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101255",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101255",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101255",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] heejin_ return: 159970",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6ea'), key: 99968.0 } ] }",
		"2020-06-16T11:16:26.228+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6ea'), key: 99968.0 } ] }",
		"2020-06-16T11:16:26.229+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.229+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.229+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6ea'), key: 99968.0 } }",
		"2020-06-16T11:16:26.229+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6ea'), key: 99968.0 }",
		"2020-06-16T11:16:26.229+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99968",
		"2020-06-16T11:16:26.229+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159972",
		"2020-06-16T11:16:26.229+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.229+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.229+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.229+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.229+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.229+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejjin splitIFNEED: 99968",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejjin get split sum : 4.99685e+09",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159971",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101290",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101290",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101290",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejin_ return: 159971",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6eb'), key: 99969.0 } ] }",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6eb'), key: 99969.0 } ] }",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6eb'), key: 99969.0 } }",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6eb'), key: 99969.0 }",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99969",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159973",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.230+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.231+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.231+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.231+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.231+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.231+0000 I SHARDING [conn2] heejjin splitIFNEED: 99969",
		"2020-06-16T11:16:26.231+0000 I SHARDING [conn2] heejjin get split sum : 4.99695e+09",
		"2020-06-16T11:16:26.231+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159972",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101325",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101325",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101325",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejin_ return: 159972",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6ec'), key: 99970.0 } ] }",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6ec'), key: 99970.0 } ] }",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6ec'), key: 99970.0 } }",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6ec'), key: 99970.0 }",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99970",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159974",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.232+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] heejjin splitIFNEED: 99970",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] heejjin get split sum : 4.99705e+09",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159973",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101360",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101360",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101360",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.233+0000 I SHARDING [conn2] heejin_ return: 159973",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6ed'), key: 99971.0 } ] }",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6ed'), key: 99971.0 } ] }",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6ed'), key: 99971.0 } }",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6ed'), key: 99971.0 }",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99971",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159975",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.234+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] heejjin splitIFNEED: 99971",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] heejjin get split sum : 4.99715e+09",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159974",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101395",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101395",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101395",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.235+0000 I SHARDING [conn2] heejin_ return: 159974",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6ee'), key: 99972.0 } ] }",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6ee'), key: 99972.0 } ] }",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6ee'), key: 99972.0 } }",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6ee'), key: 99972.0 }",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99972",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159976",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.236+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] heejjin splitIFNEED: 99972",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] heejjin get split sum : 4.99725e+09",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159975",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101430",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101430",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101430",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.237+0000 I SHARDING [conn2] heejin_ return: 159975",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6ef'), key: 99973.0 } ] }",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6ef'), key: 99973.0 } ] }",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6ef'), key: 99973.0 } }",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6ef'), key: 99973.0 }",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99973",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159977",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.238+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] heejjin splitIFNEED: 99973",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] heejjin get split sum : 4.99735e+09",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159976",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101465",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101465",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101465",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.239+0000 I SHARDING [conn2] heejin_ return: 159976",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f0'), key: 99974.0 } ] }",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f0'), key: 99974.0 } ] }",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f0'), key: 99974.0 } }",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f0'), key: 99974.0 }",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99974",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159978",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.240+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] heejjin splitIFNEED: 99974",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] heejjin get split sum : 4.99745e+09",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159977",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101500",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101500",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101500",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.241+0000 I SHARDING [conn2] heejin_ return: 159977",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f1'), key: 99975.0 } ] }",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f1'), key: 99975.0 } ] }",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f1'), key: 99975.0 } }",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f1'), key: 99975.0 }",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99975",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159979",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.242+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] heejjin splitIFNEED: 99975",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] heejjin get split sum : 4.99755e+09",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159978",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101535",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101535",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101535",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.243+0000 I SHARDING [conn2] heejin_ return: 159978",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f2'), key: 99976.0 } ] }",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f2'), key: 99976.0 } ] }",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f2'), key: 99976.0 } }",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f2'), key: 99976.0 }",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99976",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159980",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.245+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] heejjin splitIFNEED: 99976",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] heejjin get split sum : 4.99765e+09",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159979",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101570",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101570",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101570",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.246+0000 I SHARDING [conn2] heejin_ return: 159979",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f3'), key: 99977.0 } ] }",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f3'), key: 99977.0 } ] }",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f3'), key: 99977.0 } }",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f3'), key: 99977.0 }",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99977",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159981",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.247+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] heejjin splitIFNEED: 99977",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] heejjin get split sum : 4.99775e+09",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159980",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101605",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101605",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101605",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.248+0000 I SHARDING [conn2] heejin_ return: 159980",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f4'), key: 99978.0 } ] }",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f4'), key: 99978.0 } ] }",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f4'), key: 99978.0 } }",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f4'), key: 99978.0 }",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99978",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159982",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.249+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] heejjin splitIFNEED: 99978",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] heejjin get split sum : 4.99785e+09",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159981",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101640",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101640",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101640",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.250+0000 I SHARDING [conn2] heejin_ return: 159981",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f5'), key: 99979.0 } ] }",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f5'), key: 99979.0 } ] }",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f5'), key: 99979.0 } }",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f5'), key: 99979.0 }",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99979",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159983",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.251+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] heejjin splitIFNEED: 99979",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] heejjin get split sum : 4.99795e+09",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159982",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101675",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101675",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101675",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] heejin_ return: 159982",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f6'), key: 99980.0 } ] }",
		"2020-06-16T11:16:26.252+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f6'), key: 99980.0 } ] }",
		"2020-06-16T11:16:26.253+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.253+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.253+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f6'), key: 99980.0 } }",
		"2020-06-16T11:16:26.253+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f6'), key: 99980.0 }",
		"2020-06-16T11:16:26.253+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99980",
		"2020-06-16T11:16:26.253+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159984",
		"2020-06-16T11:16:26.253+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.253+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.253+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.253+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.253+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.253+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejjin splitIFNEED: 99980",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejjin get split sum : 4.99805e+09",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159983",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101710",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101710",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101710",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejin_ return: 159983",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f7'), key: 99981.0 } ] }",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f7'), key: 99981.0 } ] }",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f7'), key: 99981.0 } }",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f7'), key: 99981.0 }",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99981",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159985",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.254+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] heejjin splitIFNEED: 99981",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] heejjin get split sum : 4.99815e+09",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159984",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101745",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101745",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101745",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.255+0000 I SHARDING [conn2] heejin_ return: 159984",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f8'), key: 99982.0 } ] }",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f8'), key: 99982.0 } ] }",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f8'), key: 99982.0 } }",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f8'), key: 99982.0 }",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99982",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159986",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.256+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] heejjin splitIFNEED: 99982",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] heejjin get split sum : 4.99825e+09",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159985",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101780",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101780",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101780",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.257+0000 I SHARDING [conn2] heejin_ return: 159985",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f9'), key: 99983.0 } ] }",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6f9'), key: 99983.0 } ] }",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f9'), key: 99983.0 } }",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6f9'), key: 99983.0 }",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99983",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159987",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.258+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] heejjin splitIFNEED: 99983",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] heejjin get split sum : 4.99835e+09",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159986",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101815",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101815",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101815",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.259+0000 I SHARDING [conn2] heejin_ return: 159986",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6fa'), key: 99984.0 } ] }",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6fa'), key: 99984.0 } ] }",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6fa'), key: 99984.0 } }",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6fa'), key: 99984.0 }",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99984",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159988",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.260+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] heejjin splitIFNEED: 99984",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] heejjin get split sum : 4.99845e+09",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159987",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101850",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101850",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101850",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.261+0000 I SHARDING [conn2] heejin_ return: 159987",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6fb'), key: 99985.0 } ] }",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6fb'), key: 99985.0 } ] }",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6fb'), key: 99985.0 } }",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6fb'), key: 99985.0 }",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99985",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159989",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.262+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] heejjin splitIFNEED: 99985",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] heejjin get split sum : 4.99855e+09",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159988",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101885",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101885",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101885",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.263+0000 I SHARDING [conn2] heejin_ return: 159988",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6fc'), key: 99986.0 } ] }",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6fc'), key: 99986.0 } ] }",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6fc'), key: 99986.0 } }",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6fc'), key: 99986.0 }",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99986",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159990",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.264+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] heejjin splitIFNEED: 99986",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] heejjin get split sum : 4.99865e+09",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159989",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101920",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101920",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101920",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] heejin_ return: 159989",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6fd'), key: 99987.0 } ] }",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6fd'), key: 99987.0 } ] }",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6fd'), key: 99987.0 } }",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6fd'), key: 99987.0 }",
		"2020-06-16T11:16:26.265+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99987",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159991",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejjin splitIFNEED: 99987",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejjin get split sum : 4.99875e+09",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159990",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101955",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101955",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101955",
		"2020-06-16T11:16:26.266+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] heejin_ return: 159990",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6fe'), key: 99988.0 } ] }",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6fe'), key: 99988.0 } ] }",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6fe'), key: 99988.0 } }",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6fe'), key: 99988.0 }",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99988",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159992",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.267+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] heejjin splitIFNEED: 99988",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] heejjin get split sum : 4.99885e+09",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159991",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 101990",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101990",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 101990",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.268+0000 I SHARDING [conn2] heejin_ return: 159991",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6ff'), key: 99989.0 } ] }",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d6ff'), key: 99989.0 } ] }",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6ff'), key: 99989.0 } }",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d6ff'), key: 99989.0 }",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99989",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159993",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.269+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] heejjin splitIFNEED: 99989",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] heejjin get split sum : 4.99895e+09",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159992",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 102025",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102025",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102025",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.270+0000 I SHARDING [conn2] heejin_ return: 159992",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d700'), key: 99990.0 } ] }",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d700'), key: 99990.0 } ] }",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d700'), key: 99990.0 } }",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d700'), key: 99990.0 }",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99990",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159994",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.271+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] heejjin splitIFNEED: 99990",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] heejjin get split sum : 4.99905e+09",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159993",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 102060",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102060",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102060",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.272+0000 I SHARDING [conn2] heejin_ return: 159993",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d701'), key: 99991.0 } ] }",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d701'), key: 99991.0 } ] }",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d701'), key: 99991.0 } }",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d701'), key: 99991.0 }",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99991",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159995",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.273+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] heejjin splitIFNEED: 99991",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] heejjin get split sum : 4.99915e+09",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159994",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 102095",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102095",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102095",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.274+0000 I SHARDING [conn2] heejin_ return: 159994",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d702'), key: 99992.0 } ] }",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d702'), key: 99992.0 } ] }",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d702'), key: 99992.0 } }",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d702'), key: 99992.0 }",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99992",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159996",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.275+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] heejjin splitIFNEED: 99992",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] heejjin get split sum : 4.99925e+09",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159995",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 102130",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102130",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102130",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.276+0000 I SHARDING [conn2] heejin_ return: 159995",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d703'), key: 99993.0 } ] }",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d703'), key: 99993.0 } ] }",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d703'), key: 99993.0 } }",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d703'), key: 99993.0 }",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99993",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159997",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.277+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] heejjin splitIFNEED: 99993",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] heejjin get split sum : 4.99935e+09",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159996",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 102165",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102165",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102165",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.278+0000 I SHARDING [conn2] heejin_ return: 159996",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d704'), key: 99994.0 } ] }",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d704'), key: 99994.0 } ] }",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d704'), key: 99994.0 } }",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d704'), key: 99994.0 }",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99994",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159998",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.279+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] heejjin splitIFNEED: 99994",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] heejjin get split sum : 4.99945e+09",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159997",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 102200",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102200",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102200",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] heejin_ return: 159997",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d705'), key: 99995.0 } ] }",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d705'), key: 99995.0 } ] }",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.280+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d705'), key: 99995.0 } }",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d705'), key: 99995.0 }",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99995",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 159999",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] heejjin splitIFNEED: 99995",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] heejjin get split sum : 4.99955e+09",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159998",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 102235",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102235",
		"2020-06-16T11:16:26.281+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102235",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] heejin_ return: 159998",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d706'), key: 99996.0 } ] }",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d706'), key: 99996.0 } ] }",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d706'), key: 99996.0 } }",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d706'), key: 99996.0 }",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99996",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 160000",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.282+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] heejjin splitIFNEED: 99996",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] heejjin get split sum : 4.99965e+09",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 159999",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 102270",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102270",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102270",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.283+0000 I SHARDING [conn2] heejin_ return: 159999",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d707'), key: 99997.0 } ] }",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d707'), key: 99997.0 } ] }",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d707'), key: 99997.0 } }",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d707'), key: 99997.0 }",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99997",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 160001",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.284+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] heejjin splitIFNEED: 99997",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] heejjin get split sum : 4.99975e+09",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 160000",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 102305",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102305",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102305",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] heejin_ return: 160000",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d708'), key: 99998.0 } ] }",
		"2020-06-16T11:16:26.285+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d708'), key: 99998.0 } ] }",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d708'), key: 99998.0 } }",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d708'), key: 99998.0 }",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99998",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 160002",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejjin splitIFNEED: 99998",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejjin get split sum : 4.99985e+09",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 160001",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 102340",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102340",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102340",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.286+0000 I SHARDING [conn2] heejin_ return: 160001",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d709'), key: 99999.0 } ] }",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee8aa0aaff36f94d747d709'), key: 99999.0 } ] }",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] jin endpoints during shard response nField: 4",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] jin element in!!!!!",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee8aa0aaff36f94d747d709'), key: 99999.0 } }",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee8aa0aaff36f94d747d709'), key: 99999.0 }",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] jin endpoints during shard response getObject(key): 99999",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, globalINT : 160003",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T11:16:26.287+0000 I SHARDING [conn2] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] heejin) findIntersectingChunk",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] heejjin splitIFNEED: 99999",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] heejjin get split sum : 4.99995e+09",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 160002",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] jin!!! addBytesWritten(chunkBytesWritten) 102375",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] jin!! global split 31",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102375",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] heejjin error 1: 1048576",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] heejjin error 1: minIsInf",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] heejjin error 1 : maxIsInf",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] heejjin shouldSplit datawrittenbytes: 102375",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] heejjin shouldSplit jumbo: 0",
		"2020-06-16T11:16:26.288+0000 I SHARDING [conn2] heejin_ return: 160002",
		"2020-06-16T11:16:26.824+0000 I SHARDING [Uptime reporter]  Shard::runBatchWriteCommand config",
		"2020-06-16T11:16:26.940+0000 I SHARDING [Uptime reporter] WRITE DONE??? ",
		"2020-06-16T11:16:36.943+0000 I SHARDING [Uptime reporter]  Shard::runBatchWriteCommand config",
		"2020-06-16T11:16:37.009+0000 I SHARDING [Uptime reporter] WRITE DONE??? ",
		"2020-06-16T11:16:47.011+0000 I SHARDING [Uptime reporter]  Shard::runBatchWriteCommand config",
		"2020-06-16T11:16:47.044+0000 I SHARDING [Uptime reporter] WRITE DONE??? ",
		"2020-06-16T11:16:57.047+0000 I SHARDING [Uptime reporter]  Shard::runBatchWriteCommand config",
		"2020-06-16T11:16:57.088+0000 I SHARDING [Uptime reporter] WRITE DONE??? ",
		"2020-06-16T11:17:07.091+0000 I SHARDING [Uptime reporter]  Shard::runBatchWriteCommand config",
		"2020-06-16T11:17:07.124+0000 I SHARDING [Uptime reporter] WRITE DONE??? "
	],
	"ok" : 1,
	"operationTime" : Timestamp(1592306227, 1),
	"$clusterTime" : {
		"clusterTime" : Timestamp(1592306227, 1),
		"signature" : {
			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
			"keyId" : NumberLong(0)
		}
	}
}
mongos> sh.status()[9G[Jsh.status()[20G
--- Sharding Status --- 
  sharding version: {
  	"_id" : 1,
  	"minCompatibleVersion" : 5,
  	"currentVersion" : 6,
  	"clusterId" : ObjectId("5ed775806cd1a72e8d0f9c42")
  }
  shards:
        {  "_id" : "apple",  "host" : "apple/10.20.16.110:30001,10.20.16.111:30001,10.20.16.165:30001",  "state" : 1 }
        {  "_id" : "banana",  "host" : "banana/10.20.16.110:30002,10.20.16.111:30002,10.20.16.112:30002",  "state" : 1 }
        {  "_id" : "mango",  "host" : "mango/10.20.16.111:30003,10.20.16.112:30003,10.20.16.115:30003",  "state" : 1 }
  active mongoses:
        "3.6.18" : 1
  autosplit:
        Currently enabled: yes
  balancer:
        Currently enabled:  yes
        Currently running:  no
        Failed balancer rounds in last 5 attempts:  0
        Migration Results for the last 24 hours: 
                28 : Success
                1 : Failed with error 'aborted', from banana to mango
                1 : Failed with error 'aborted', from mango to apple
  databases:
        {  "_id" : "config",  "primary" : "config",  "partitioned" : true }
                config.system.sessions
                        shard key: { "_id" : 1 }
                        unique: false
                        balancing: true
                        chunks:
                                apple	1
                        { "_id" : { "$minKey" : 1 } } -->> { "_id" : { "$maxKey" : 1 } } on : apple Timestamp(1, 0) 
        {  "_id" : "heeijn_test",  "primary" : "apple",  "partitioned" : false }
        {  "_id" : "heejin_test",  "primary" : "banana",  "partitioned" : true }
                heejin_test.heejin_col
                        shard key: { "key" : 1 }
                        unique: false
                        balancing: true
                        chunks:
                                apple	16
                                banana	16
                                mango	16
                        too many chunks to print, use verbose if you want to force print
        {  "_id" : "mall",  "primary" : "banana",  "partitioned" : true }
                mall.product
                        shard key: { "p_id" : 1, "p_name" : 1 }
                        unique: false
                        balancing: true
                        chunks:
                                apple	35
                                banana	34
                                mango	34
                        too many chunks to print, use verbose if you want to force print
        {  "_id" : "newDB",  "primary" : "banana",  "partitioned" : true }
                newDB.newCol
                        shard key: { "key" : 1 }
                        unique: false
                        balancing: true
                        chunks:
                                banana	1
                        { "key" : { "$minKey" : 1 } } -->> { "key" : { "$maxKey" : 1 } } on : banana Timestamp(1, 0) 
        {  "_id" : "test",  "primary" : "banana",  "partitioned" : false }

mongos> 