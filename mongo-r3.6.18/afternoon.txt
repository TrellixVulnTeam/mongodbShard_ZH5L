MongoDB shell version v3.6.18
connecting to: mongodb://10.20.16.165:50001/test?gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("99cb33a0-e6fa-4a77-802c-112da78cc92f") }
MongoDB server version: 3.6.18
Server has startup warnings: 
2020-06-17T08:56:52.991+0000 I CONTROL  [main] 
2020-06-17T08:56:52.991+0000 I CONTROL  [main] ** WARNING: Access control is not enabled for the database.
2020-06-17T08:56:52.991+0000 I CONTROL  [main] **          Read and write access to data and configuration is unrestricted.
2020-06-17T08:56:52.991+0000 I CONTROL  [main] ** WARNING: You are running this process as the root user, which is not recommended.
2020-06-17T08:56:52.991+0000 I CONTROL  [main] 
mongos> use newDB[9G[Juse newDB[18G
switched to db newDB
mongos> [9G[Juse newDB[18G[9G[JprintShardingSizes()[29G[9G[JprintShardingSizes()[29G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[72G[9G[Jfor (var i=60000; i<70000; i++) [1;34m{[0m db.newCol.insert({key: i})  }[71G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[70G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[69G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert[1;34m([0m{key: i})  }[68G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert([1;34m{[0mkey: i})  }[67G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[66G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[65G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[64G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[63G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[62G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[61G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i[1;34m}[0m)  }[60G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i}[1;34m)[0m  }[59G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[58G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[57G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[56G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[55G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[54G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[53G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[52G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[51G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[50G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[49G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[48G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[47G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[46G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[45G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[44G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[43G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[42G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  [1;34m}[0m[41G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[40G[9G[Jfor [1;34m([0mvar i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[39G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[38G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[37G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[36G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[35G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[34G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[33G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[32G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[31G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[30G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[29G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[28G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[27G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[26G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[25G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[24G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[23G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[22G[9G[Jfor (var i=60000; i<70000; i++) { db.newCol.insert({key: i})  }[21G[9G[Jfor (var i=0000; i<70000; i++) { db.newCol.insert({key: i})  }[20G[9G[Jfor (var i=70000; i<70000; i++) { db.newCol.insert({key: i})  }[21G[9G[Jfor (var i=70000; i<70000; i++) { db.newCol.insert({key: i})  }[22G[9G[Jfor (var i=70000; i<70000; i++) { db.newCol.insert({key: i})  }[23G[9G[Jfor (var i=70000; i<70000; i++) { db.newCol.insert({key: i})  }[24G[9G[Jfor (var i=70000; i<70000; i++) { db.newCol.insert({key: i})  }[25G[9G[Jfor (var i=70000; i<70000; i++) { db.newCol.insert({key: i})  }[26G[9G[Jfor (var i=70000; i<70000; i++) { db.newCol.insert({key: i})  }[27G[9G[Jfor (var i=70000; i<70000; i++) { db.newCol.insert({key: i})  }[28G[9G[Jfor (var i=70000; i<70000; i++) { db.newCol.insert({key: i})  }[29G[9G[Jfor (var i=70000; i<70000; i++) { db.newCol.insert({key: i})  }[30G[9G[Jfor (var i=70000; i<70000; i++) { db.newCol.insert({key: i})  }[31G[9G[Jfor (var i=70000; i<70000; i++) { db.newCol.insert({key: i})  }[30G[9G[Jfor (var i=70000; i<0000; i++) { db.newCol.insert({key: i})  }[29G[9G[Jfor (var i=70000; i<10000; i++) { db.newCol.insert({key: i})  }[30G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[31G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[73G
WriteResult({ "nInserted" : 1 })
mongos> [9G[J[9Gmongos> [9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[73G[9G[Juse newDB[18G[9G[JprintShardingSizes()[29G[9G[JprintShardingSizes()[29G

2020-06-17T09:00:41.004+0000 I NETWORK  [thread1] Starting new replica set monitor for apple/10.20.16.110:30001,10.20.16.111:30001,10.20.16.165:30001
2020-06-17T09:00:41.009+0000 I NETWORK  [thread1] Starting new replica set monitor for banana/10.20.16.110:30002,10.20.16.111:30002,10.20.16.112:30002
2020-06-17T09:00:41.014+0000 I NETWORK  [thread1] Starting new replica set monitor for mango/10.20.16.111:30003,10.20.16.112:30003,10.20.16.115:30003
--- Sharding Sizes --- 
  sharding version: {
  	"_id" : 1,
  	"minCompatibleVersion" : 5,
  	"currentVersion" : 6,
  	"clusterId" : ObjectId("5ee9d71ba3c26cb7eca74ea3")
  }
  shards:
        {
        	"_id" : "apple",
        	"host" : "apple/10.20.16.110:30001,10.20.16.111:30001,10.20.16.165:30001",
        	"state" : 1
        }
        {
        	"_id" : "banana",
        	"host" : "banana/10.20.16.110:30002,10.20.16.111:30002,10.20.16.112:30002",
        	"state" : 1
        }
        {
        	"_id" : "mango",
        	"host" : "mango/10.20.16.111:30003,10.20.16.112:30003,10.20.16.115:30003",
        	"state" : 1
        }
  databases:
        { "_id" : "newDB", "primary" : "apple", "partitioned" : true }
                newDB.newCol chunks:
                        { "key" : { "$minKey" : 1 } } -->> { "key" : 1 } on : mango {
                        	"estimate" : false,
                        	"size" : 35,
                        	"numObjects" : 1,
                        	"operationTime" : Timestamp(1592384447, 1),
                        	"$gleStats" : {
                        		"lastOpTime" : Timestamp(0, 0),
                        		"electionId" : ObjectId("7fffffff0000000000000002")
                        	},
                        	"$configServerState" : {
                        		"opTime" : {
                        			"ts" : Timestamp(1592384437, 2),
                        			"t" : NumberLong(3)
                        		}
                        	},
                        	"$clusterTime" : {
                        		"clusterTime" : Timestamp(1592384447, 1),
                        		"signature" : {
                        			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        			"keyId" : NumberLong(0)
                        		}
                        	}
                        }
                        { "key" : 1 } -->> { "key" : 59919 } on : apple {
                        	"estimate" : false,
                        	"size" : 2097130,
                        	"numObjects" : 59918,
                        	"operationTime" : Timestamp(1592384438, 1),
                        	"$gleStats" : {
                        		"lastOpTime" : Timestamp(0, 0),
                        		"electionId" : ObjectId("7fffffff0000000000000003")
                        	},
                        	"$configServerState" : {
                        		"opTime" : {
                        			"ts" : Timestamp(1592384437, 2),
                        			"t" : NumberLong(3)
                        		}
                        	},
                        	"$clusterTime" : {
                        		"clusterTime" : Timestamp(1592384438, 1),
                        		"signature" : {
                        			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        			"keyId" : NumberLong(0)
                        		}
                        	}
                        }
                        { "key" : 59919 } -->> { "key" : { "$maxKey" : 1 } } on : banana {
                        	"estimate" : false,
                        	"size" : 2102835,
                        	"numObjects" : 60081,
                        	"operationTime" : Timestamp(1592384438, 2),
                        	"$gleStats" : {
                        		"lastOpTime" : Timestamp(0, 0),
                        		"electionId" : ObjectId("7fffffff0000000000000002")
                        	},
                        	"$configServerState" : {
                        		"opTime" : {
                        			"ts" : Timestamp(1592384437, 2),
                        			"t" : NumberLong(3)
                        		}
                        	},
                        	"$clusterTime" : {
                        		"clusterTime" : Timestamp(1592384438, 2),
                        		"signature" : {
                        			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        			"keyId" : NumberLong(0)
                        		}
                        	}
                        }
        { "_id" : "test", "primary" : "mango", "partitioned" : false }

mongos> [9G[JprintShardingSizes()[29G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[73G[9G[Jfor (var i=70000; i<120000; i++) [1;34m{[0m db.newCol.insert({key: i})  }[72G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[71G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[70G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert[1;34m([0m{key: i})  }[69G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert([1;34m{[0mkey: i})  }[68G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[67G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[66G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[65G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[64G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[63G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[62G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i[1;34m}[0m)  }[61G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i}[1;34m)[0m  }[60G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[59G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[58G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[57G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[56G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[55G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[54G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[53G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[52G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[51G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[50G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[49G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[48G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[47G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[46G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[45G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[44G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[43G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  [1;34m}[0m[42G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[41G[9G[Jfor [1;34m([0mvar i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[40G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[39G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[38G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[37G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[36G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[35G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[34G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[33G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[32G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[31G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[30G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[29G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[28G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[27G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[26G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[25G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[24G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[23G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[22G[9G[Jfor (var i=70000; i<120000; i++) { db.newCol.insert({key: i})  }[21G[9G[Jfor (var i=0000; i<120000; i++) { db.newCol.insert({key: i})  }[20G[9G[Jfor (var i=10000; i<120000; i++) { db.newCol.insert({key: i})  }[21G[9G[Jfor (var i=120000; i<120000; i++) { db.newCol.insert({key: i})  }[22G[9G[Jfor (var i=120000; i<120000; i++) { db.newCol.insert({key: i})  }[23G[9G[Jfor (var i=120000; i<120000; i++) { db.newCol.insert({key: i})  }[24G[9G[Jfor (var i=120000; i<120000; i++) { db.newCol.insert({key: i})  }[25G[9G[Jfor (var i=120000; i<120000; i++) { db.newCol.insert({key: i})  }[26G[9G[Jfor (var i=120000; i<120000; i++) { db.newCol.insert({key: i})  }[27G[9G[Jfor (var i=120000; i<120000; i++) { db.newCol.insert({key: i})  }[28G[9G[Jfor (var i=120000; i<120000; i++) { db.newCol.insert({key: i})  }[29G[9G[Jfor (var i=120000; i<120000; i++) { db.newCol.insert({key: i})  }[30G[9G[Jfor (var i=120000; i<120000; i++) { db.newCol.insert({key: i})  }[31G[9G[Jfor (var i=120000; i<120000; i++) { db.newCol.insert({key: i})  }[32G[9G[Jfor (var i=120000; i<10000; i++) { db.newCol.insert({key: i})  }[31G[9G[Jfor (var i=120000; i<150000; i++) { db.newCol.insert({key: i})  }[32G[9G[Jfor (var i=120000; i<150000; i++) { db.newCol.insert({key: i})  }[74G
WriteResult({ "nInserted" : 1 })
mongos> [9G[Jfor (var i=120000; i<150000; i++) { db.newCol.insert({key: i})  }[74G[9G[JprintShardingSizes()[29G[9G[JprintShardingSizes()[29G
2020-06-17T09:02:59.311+0000 I NETWORK  [thread1] Starting new replica set monitor for apple/10.20.16.110:30001,10.20.16.111:30001,10.20.16.165:30001
2020-06-17T09:02:59.314+0000 I NETWORK  [thread1] Starting new replica set monitor for banana/10.20.16.110:30002,10.20.16.111:30002,10.20.16.112:30002
2020-06-17T09:02:59.317+0000 I NETWORK  [thread1] Starting new replica set monitor for mango/10.20.16.111:30003,10.20.16.112:30003,10.20.16.115:30003
--- Sharding Sizes --- 
  sharding version: {
  	"_id" : 1,
  	"minCompatibleVersion" : 5,
  	"currentVersion" : 6,
  	"clusterId" : ObjectId("5ee9d71ba3c26cb7eca74ea3")
  }
  shards:
        {
        	"_id" : "apple",
        	"host" : "apple/10.20.16.110:30001,10.20.16.111:30001,10.20.16.165:30001",
        	"state" : 1
        }
        {
        	"_id" : "banana",
        	"host" : "banana/10.20.16.110:30002,10.20.16.111:30002,10.20.16.112:30002",
        	"state" : 1
        }
        {
        	"_id" : "mango",
        	"host" : "mango/10.20.16.111:30003,10.20.16.112:30003,10.20.16.115:30003",
        	"state" : 1
        }
  databases:
        { "_id" : "newDB", "primary" : "apple", "partitioned" : true }
                newDB.newCol chunks:
                        { "key" : { "$minKey" : 1 } } -->> { "key" : 1 } on : mango {
                        	"estimate" : false,
                        	"size" : 35,
                        	"numObjects" : 1,
                        	"operationTime" : Timestamp(1592384577, 1),
                        	"$gleStats" : {
                        		"lastOpTime" : Timestamp(0, 0),
                        		"electionId" : ObjectId("7fffffff0000000000000002")
                        	},
                        	"$configServerState" : {
                        		"opTime" : {
                        			"ts" : Timestamp(1592384577, 2),
                        			"t" : NumberLong(3)
                        		}
                        	},
                        	"$clusterTime" : {
                        		"clusterTime" : Timestamp(1592384577, 5),
                        		"signature" : {
                        			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        			"keyId" : NumberLong(0)
                        		}
                        	}
                        }
                        { "key" : 1 } -->> { "key" : 59919 } on : apple {
                        	"estimate" : false,
                        	"size" : 2097130,
                        	"numObjects" : 59918,
                        	"operationTime" : Timestamp(1592384571, 1),
                        	"$gleStats" : {
                        		"lastOpTime" : Timestamp(0, 0),
                        		"electionId" : ObjectId("7fffffff0000000000000003")
                        	},
                        	"$configServerState" : {
                        		"opTime" : {
                        			"ts" : Timestamp(1592384577, 2),
                        			"t" : NumberLong(3)
                        		}
                        	},
                        	"$clusterTime" : {
                        		"clusterTime" : Timestamp(1592384577, 3),
                        		"signature" : {
                        			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        			"keyId" : NumberLong(0)
                        		}
                        	}
                        }
                        { "key" : 59919 } -->> { "key" : 89878 } on : banana {
                        	"estimate" : false,
                        	"size" : 1048565,
                        	"numObjects" : 29959,
                        	"operationTime" : Timestamp(1592384578, 1),
                        	"$gleStats" : {
                        		"lastOpTime" : Timestamp(0, 0),
                        		"electionId" : ObjectId("7fffffff0000000000000002")
                        	},
                        	"$configServerState" : {
                        		"opTime" : {
                        			"ts" : Timestamp(1592384577, 2),
                        			"t" : NumberLong(3)
                        		}
                        	},
                        	"$clusterTime" : {
                        		"clusterTime" : Timestamp(1592384578, 1),
                        		"signature" : {
                        			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        			"keyId" : NumberLong(0)
                        		}
                        	}
                        }
                        { "key" : 89878 } -->> { "key" : 123930 } on : banana {
                        	"estimate" : false,
                        	"size" : 1191820,
                        	"numObjects" : 34052,
                        	"operationTime" : Timestamp(1592384578, 1),
                        	"$gleStats" : {
                        		"lastOpTime" : Timestamp(0, 0),
                        		"electionId" : ObjectId("7fffffff0000000000000002")
                        	},
                        	"$configServerState" : {
                        		"opTime" : {
                        			"ts" : Timestamp(1592384577, 2),
                        			"t" : NumberLong(3)
                        		}
                        	},
                        	"$clusterTime" : {
                        		"clusterTime" : Timestamp(1592384578, 1),
                        		"signature" : {
                        			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        			"keyId" : NumberLong(0)
                        		}
                        	}
                        }
                        { "key" : 123930 } -->> { "key" : { "$maxKey" : 1 } } on : mango {
                        	"estimate" : false,
                        	"size" : 912450,
                        	"numObjects" : 26070,
                        	"operationTime" : Timestamp(1592384577, 1),
                        	"$gleStats" : {
                        		"lastOpTime" : Timestamp(0, 0),
                        		"electionId" : ObjectId("7fffffff0000000000000002")
                        	},
                        	"$configServerState" : {
                        		"opTime" : {
                        			"ts" : Timestamp(1592384577, 2),
                        			"t" : NumberLong(3)
                        		}
                        	},
                        	"$clusterTime" : {
                        		"clusterTime" : Timestamp(1592384577, 5),
                        		"signature" : {
                        			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        			"keyId" : NumberLong(0)
                        		}
                        	}
                        }
        { "_id" : "test", "primary" : "mango", "partitioned" : false }

mongos> [9G[Jdb.items.createIndex({"index": "hashed"})[50G