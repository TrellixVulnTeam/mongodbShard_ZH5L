MongoDB shell version v3.6.18
connecting to: mongodb://10.20.16.165:50001/test?gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("4931d27b-e5a0-465d-aca7-a7ea707b3e02") }
MongoDB server version: 3.6.18
Server has startup warnings: 
2020-06-16T10:08:51.331+0000 I CONTROL  [main] 
2020-06-16T10:08:51.331+0000 I CONTROL  [main] ** WARNING: Access control is not enabled for the database.
2020-06-16T10:08:51.331+0000 I CONTROL  [main] **          Read and write access to data and configuration is unrestricted.
2020-06-16T10:08:51.331+0000 I CONTROL  [main] ** WARNING: You are running this process as the root user, which is not recommended.
2020-06-16T10:08:51.331+0000 I CONTROL  [main] 
mongos> sh.status()[9G[Jsh.status()[20G
--- Sharding Status --- 
  sharding version: {
  	"_id" : 1,
  	"minCompatibleVersion" : 5,
  	"currentVersion" : 6,
  	"clusterId" : ObjectId("5ed775806cd1a72e8d0f9c42")
  }
  shards:
        {  "_id" : "apple",  "host" : "apple/10.20.16.110:30001,10.20.16.111:30001,10.20.16.165:30001",  "state" : 1 }
        {  "_id" : "banana",  "host" : "banana/10.20.16.110:30002,10.20.16.111:30002,10.20.16.112:30002",  "state" : 1 }
        {  "_id" : "mango",  "host" : "mango/10.20.16.111:30003,10.20.16.112:30003,10.20.16.115:30003",  "state" : 1 }
  active mongoses:
        "3.6.18" : 1
  autosplit:
        Currently enabled: yes
  balancer:
        Currently enabled:  yes
        Currently running:  no
        Failed balancer rounds in last 5 attempts:  0
        Migration Results for the last 24 hours: 
                24 : Success
                1 : Failed with error 'aborted', from mango to apple
  databases:
        {  "_id" : "config",  "primary" : "config",  "partitioned" : true }
                config.system.sessions
                        shard key: { "_id" : 1 }
                        unique: false
                        balancing: true
                        chunks:
                                apple	1
                        { "_id" : { "$minKey" : 1 } } -->> { "_id" : { "$maxKey" : 1 } } on : apple Timestamp(1, 0) 
        {  "_id" : "heeijn_test",  "primary" : "apple",  "partitioned" : false }
        {  "_id" : "heejin_test",  "primary" : "banana",  "partitioned" : true }
                heejin_test.heejin_col
                        shard key: { "key" : 1 }
                        unique: false
                        balancing: true
                        chunks:
                                apple	16
                                banana	16
                                mango	16
                        too many chunks to print, use verbose if you want to force print
        {  "_id" : "mall",  "primary" : "banana",  "partitioned" : true }
                mall.product
                        shard key: { "p_id" : 1, "p_name" : 1 }
                        unique: false
                        balancing: true
                        chunks:
                                apple	35
                                banana	34
                                mango	34
                        too many chunks to print, use verbose if you want to force print
        {  "_id" : "newDB",  "primary" : "banana",  "partitioned" : true }
                newDB.newCol
                        shard key: { "key" : 1 }
                        unique: false
                        balancing: true
                        chunks:
                                banana	1
                        { "key" : { "$minKey" : 1 } } -->> { "key" : { "$maxKey" : 1 } } on : banana Timestamp(1, 0) 
        {  "_id" : "test",  "primary" : "banana",  "partitioned" : false }

mongos> use newDB[9G[Juse newDB[18G
switched to db newDB
mongos> [9G[Juse newDB[18G[9G[Jsh.status()[20G[9G[JprintShardingSizes()[29G[9G[Jdb.adminCommand( {getLog: "global"} )[46G[9G[Jfor (var i=10000; i<50000; i++) { db.newCol.insert({key: i})  }[72G[9G[Jsh.status()[20G[9G[Jfor (var i=10000; i<50000; i++) { db.newCol.insert({key: i})  }[72G[9G[Jfor (var i=10000; i<50000; i++) { db.newCol.insert({key: i})  }[72G
WriteResult({ "nInserted" : 1 })
mongos> [9G[Jfor (var i=10000; i<50000; i++) { db.newCol.insert({key: i})  }[72G[9G[Juse newDB[18G[9G[Jsh.status()[20G[9G[JprintShardingSizes()[29G[9G[Jdb.adminCommand( {getLog: "global"} )[46G[9G[Jfor (var i=10000; i<50000; i++) { db.newCol.insert({key: i})  }[72G[9G[Jdb.adminCommand( {getLog: "global"} )[46G[9G[Jdb.adminCommand( {getLog: "global"} )[46G
{
	"totalLinesWritten" : 1120064,
	"log" : [
		"2020-06-16T10:10:20.384+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.384+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77420",
		"2020-06-16T10:10:20.384+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.384+0000 I SHARDING [conn1] heejin_ return: 39964",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f1'), key: 49964.0 } ] }",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f1'), key: 49964.0 } ] }",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726f1'), key: 49964.0 } }",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726f1'), key: 49964.0 }",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49964",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39965",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.385+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejjin splitIFNEED: 49964",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejjin get split sum : 1.19823e+09",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39965",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77455",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77455",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77455",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejin_ return: 39965",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f2'), key: 49965.0 } ] }",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f2'), key: 49965.0 } ] }",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726f2'), key: 49965.0 } }",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726f2'), key: 49965.0 }",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49965",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39966",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.386+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] heejjin splitIFNEED: 49965",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] heejjin get split sum : 1.19828e+09",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39966",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77490",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77490",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77490",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.387+0000 I SHARDING [conn1] heejin_ return: 39966",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f3'), key: 49966.0 } ] }",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f3'), key: 49966.0 } ] }",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726f3'), key: 49966.0 } }",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726f3'), key: 49966.0 }",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49966",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39967",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.388+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejjin splitIFNEED: 49966",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejjin get split sum : 1.19833e+09",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39967",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77525",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77525",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77525",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejin_ return: 39967",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f4'), key: 49967.0 } ] }",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f4'), key: 49967.0 } ] }",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726f4'), key: 49967.0 } }",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726f4'), key: 49967.0 }",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49967",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39968",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.389+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] heejjin splitIFNEED: 49967",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] heejjin get split sum : 1.19838e+09",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39968",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77560",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77560",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77560",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.390+0000 I SHARDING [conn1] heejin_ return: 39968",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f5'), key: 49968.0 } ] }",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f5'), key: 49968.0 } ] }",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726f5'), key: 49968.0 } }",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726f5'), key: 49968.0 }",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49968",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39969",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.391+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejjin splitIFNEED: 49968",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejjin get split sum : 1.19843e+09",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39969",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77595",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77595",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77595",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejin_ return: 39969",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f6'), key: 49969.0 } ] }",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f6'), key: 49969.0 } ] }",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726f6'), key: 49969.0 } }",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726f6'), key: 49969.0 }",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49969",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39970",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.392+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejjin splitIFNEED: 49969",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejjin get split sum : 1.19848e+09",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39970",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77630",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77630",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77630",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejin_ return: 39970",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f7'), key: 49970.0 } ] }",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f7'), key: 49970.0 } ] }",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726f7'), key: 49970.0 } }",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726f7'), key: 49970.0 }",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49970",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39971",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.394+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.395+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.395+0000 I SHARDING [conn1] heejjin splitIFNEED: 49970",
		"2020-06-16T10:10:20.395+0000 I SHARDING [conn1] heejjin get split sum : 1.19853e+09",
		"2020-06-16T10:10:20.395+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39971",
		"2020-06-16T10:10:20.395+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.395+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77665",
		"2020-06-16T10:10:20.395+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77665",
		"2020-06-16T10:10:20.395+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.395+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77665",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] heejin_ return: 39971",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f8'), key: 49971.0 } ] }",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f8'), key: 49971.0 } ] }",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726f8'), key: 49971.0 } }",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726f8'), key: 49971.0 }",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49971",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39972",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.396+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] heejjin splitIFNEED: 49971",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] heejjin get split sum : 1.19858e+09",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39972",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77700",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77700",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77700",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.397+0000 I SHARDING [conn1] heejin_ return: 39972",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f9'), key: 49972.0 } ] }",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726f9'), key: 49972.0 } ] }",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726f9'), key: 49972.0 } }",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726f9'), key: 49972.0 }",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49972",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39973",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] heejjin splitIFNEED: 49972",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] heejjin get split sum : 1.19863e+09",
		"2020-06-16T10:10:20.398+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39973",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77735",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77735",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77735",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejin_ return: 39973",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726fa'), key: 49973.0 } ] }",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726fa'), key: 49973.0 } ] }",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726fa'), key: 49973.0 } }",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726fa'), key: 49973.0 }",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49973",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39974",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.399+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] heejjin splitIFNEED: 49973",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] heejjin get split sum : 1.19868e+09",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39974",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77770",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77770",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77770",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.400+0000 I SHARDING [conn1] heejin_ return: 39974",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726fb'), key: 49974.0 } ] }",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726fb'), key: 49974.0 } ] }",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726fb'), key: 49974.0 } }",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726fb'), key: 49974.0 }",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49974",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39975",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] heejjin splitIFNEED: 49974",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] heejjin get split sum : 1.19873e+09",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39975",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77805",
		"2020-06-16T10:10:20.401+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77805",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77805",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejin_ return: 39975",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726fc'), key: 49975.0 } ] }",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726fc'), key: 49975.0 } ] }",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726fc'), key: 49975.0 } }",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726fc'), key: 49975.0 }",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49975",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39976",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.402+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] heejjin splitIFNEED: 49975",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] heejjin get split sum : 1.19878e+09",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39976",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77840",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77840",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77840",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.403+0000 I SHARDING [conn1] heejin_ return: 39976",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726fd'), key: 49976.0 } ] }",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726fd'), key: 49976.0 } ] }",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726fd'), key: 49976.0 } }",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726fd'), key: 49976.0 }",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49976",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39977",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] heejjin splitIFNEED: 49976",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] heejjin get split sum : 1.19883e+09",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39977",
		"2020-06-16T10:10:20.404+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77875",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77875",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77875",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejin_ return: 39977",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726fe'), key: 49977.0 } ] }",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726fe'), key: 49977.0 } ] }",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726fe'), key: 49977.0 } }",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726fe'), key: 49977.0 }",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49977",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39978",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.405+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] heejjin splitIFNEED: 49977",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] heejjin get split sum : 1.19888e+09",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39978",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77910",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77910",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77910",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.406+0000 I SHARDING [conn1] heejin_ return: 39978",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726ff'), key: 49978.0 } ] }",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e7551318726ff'), key: 49978.0 } ] }",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e7551318726ff'), key: 49978.0 } }",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e7551318726ff'), key: 49978.0 }",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49978",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39979",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] heejjin splitIFNEED: 49978",
		"2020-06-16T10:10:20.407+0000 I SHARDING [conn1] heejjin get split sum : 1.19893e+09",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39979",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77945",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77945",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77945",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejin_ return: 39979",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872700'), key: 49979.0 } ] }",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872700'), key: 49979.0 } ] }",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872700'), key: 49979.0 } }",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872700'), key: 49979.0 }",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49979",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39980",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.408+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] heejjin splitIFNEED: 49979",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] heejjin get split sum : 1.19898e+09",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39980",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 77980",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77980",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 77980",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.409+0000 I SHARDING [conn1] heejin_ return: 39980",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872701'), key: 49980.0 } ] }",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872701'), key: 49980.0 } ] }",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872701'), key: 49980.0 } }",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872701'), key: 49980.0 }",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49980",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39981",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.410+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] heejjin splitIFNEED: 49980",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] heejjin get split sum : 1.19903e+09",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39981",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78015",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78015",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78015",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.411+0000 I SHARDING [conn1] heejin_ return: 39981",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872702'), key: 49981.0 } ] }",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872702'), key: 49981.0 } ] }",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872702'), key: 49981.0 } }",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872702'), key: 49981.0 }",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49981",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39982",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.412+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] heejjin splitIFNEED: 49981",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] heejjin get split sum : 1.19908e+09",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39982",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78050",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78050",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78050",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] heejin_ return: 39982",
		"2020-06-16T10:10:20.413+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872703'), key: 49982.0 } ] }",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872703'), key: 49982.0 } ] }",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872703'), key: 49982.0 } }",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872703'), key: 49982.0 }",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49982",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39983",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.414+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejjin splitIFNEED: 49982",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejjin get split sum : 1.19913e+09",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39983",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78085",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78085",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78085",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejin_ return: 39983",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872704'), key: 49983.0 } ] }",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872704'), key: 49983.0 } ] }",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872704'), key: 49983.0 } }",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872704'), key: 49983.0 }",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49983",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39984",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.415+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.416+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.416+0000 I SHARDING [conn1] heejjin splitIFNEED: 49983",
		"2020-06-16T10:10:20.416+0000 I SHARDING [conn1] heejjin get split sum : 1.19918e+09",
		"2020-06-16T10:10:20.416+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39984",
		"2020-06-16T10:10:20.416+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.416+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78120",
		"2020-06-16T10:10:20.416+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78120",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78120",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejin_ return: 39984",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872705'), key: 49984.0 } ] }",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872705'), key: 49984.0 } ] }",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872705'), key: 49984.0 } }",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872705'), key: 49984.0 }",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49984",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39985",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.417+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] heejjin splitIFNEED: 49984",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] heejjin get split sum : 1.19923e+09",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39985",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78155",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78155",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78155",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.418+0000 I SHARDING [conn1] heejin_ return: 39985",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872706'), key: 49985.0 } ] }",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872706'), key: 49985.0 } ] }",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872706'), key: 49985.0 } }",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872706'), key: 49985.0 }",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49985",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39986",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.419+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] heejjin splitIFNEED: 49985",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] heejjin get split sum : 1.19928e+09",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39986",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78190",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78190",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78190",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.420+0000 I SHARDING [conn1] heejin_ return: 39986",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872707'), key: 49986.0 } ] }",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872707'), key: 49986.0 } ] }",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872707'), key: 49986.0 } }",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872707'), key: 49986.0 }",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49986",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39987",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.421+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejjin splitIFNEED: 49986",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejjin get split sum : 1.19933e+09",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39987",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78225",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78225",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78225",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejin_ return: 39987",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872708'), key: 49987.0 } ] }",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872708'), key: 49987.0 } ] }",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872708'), key: 49987.0 } }",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872708'), key: 49987.0 }",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49987",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39988",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.422+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.423+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.423+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.423+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.423+0000 I SHARDING [conn1] heejjin splitIFNEED: 49987",
		"2020-06-16T10:10:20.423+0000 I SHARDING [conn1] heejjin get split sum : 1.19938e+09",
		"2020-06-16T10:10:20.423+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39988",
		"2020-06-16T10:10:20.423+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.423+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78260",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78260",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78260",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejin_ return: 39988",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872709'), key: 49988.0 } ] }",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872709'), key: 49988.0 } ] }",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872709'), key: 49988.0 } }",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872709'), key: 49988.0 }",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49988",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39989",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.424+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] heejjin splitIFNEED: 49988",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] heejjin get split sum : 1.19943e+09",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39989",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78295",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78295",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78295",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.425+0000 I SHARDING [conn1] heejin_ return: 39989",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e75513187270a'), key: 49989.0 } ] }",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e75513187270a'), key: 49989.0 } ] }",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e75513187270a'), key: 49989.0 } }",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e75513187270a'), key: 49989.0 }",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49989",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39990",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.426+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] heejjin splitIFNEED: 49989",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] heejjin get split sum : 1.19948e+09",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39990",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78330",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78330",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78330",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] heejin_ return: 39990",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e75513187270b'), key: 49990.0 } ] }",
		"2020-06-16T10:10:20.427+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e75513187270b'), key: 49990.0 } ] }",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e75513187270b'), key: 49990.0 } }",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e75513187270b'), key: 49990.0 }",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49990",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39991",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.428+0000 I SHARDING [conn1] heejjin splitIFNEED: 49990",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejjin get split sum : 1.19953e+09",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39991",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78365",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78365",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78365",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejin_ return: 39991",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e75513187270c'), key: 49991.0 } ] }",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e75513187270c'), key: 49991.0 } ] }",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e75513187270c'), key: 49991.0 } }",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e75513187270c'), key: 49991.0 }",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49991",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39992",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.429+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] heejjin splitIFNEED: 49991",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] heejjin get split sum : 1.19958e+09",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39992",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78400",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78400",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78400",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.430+0000 I SHARDING [conn1] heejin_ return: 39992",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e75513187270d'), key: 49992.0 } ] }",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e75513187270d'), key: 49992.0 } ] }",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e75513187270d'), key: 49992.0 } }",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e75513187270d'), key: 49992.0 }",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49992",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39993",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.431+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] heejjin splitIFNEED: 49992",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] heejjin get split sum : 1.19963e+09",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39993",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78435",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78435",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78435",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.432+0000 I SHARDING [conn1] heejin_ return: 39993",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e75513187270e'), key: 49993.0 } ] }",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e75513187270e'), key: 49993.0 } ] }",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e75513187270e'), key: 49993.0 } }",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e75513187270e'), key: 49993.0 }",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49993",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39994",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.433+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] heejjin splitIFNEED: 49993",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] heejjin get split sum : 1.19968e+09",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39994",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78470",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78470",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78470",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.434+0000 I SHARDING [conn1] heejin_ return: 39994",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e75513187270f'), key: 49994.0 } ] }",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e75513187270f'), key: 49994.0 } ] }",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e75513187270f'), key: 49994.0 } }",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e75513187270f'), key: 49994.0 }",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49994",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39995",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.435+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejjin splitIFNEED: 49994",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejjin get split sum : 1.19973e+09",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39995",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78505",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78505",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78505",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejin_ return: 39995",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872710'), key: 49995.0 } ] }",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872710'), key: 49995.0 } ] }",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872710'), key: 49995.0 } }",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872710'), key: 49995.0 }",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49995",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39996",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.436+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] heejjin splitIFNEED: 49995",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] heejjin get split sum : 1.19978e+09",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39996",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78540",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78540",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78540",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.437+0000 I SHARDING [conn1] heejin_ return: 39996",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872711'), key: 49996.0 } ] }",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872711'), key: 49996.0 } ] }",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872711'), key: 49996.0 } }",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872711'), key: 49996.0 }",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49996",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39997",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.438+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] heejjin splitIFNEED: 49996",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] heejjin get split sum : 1.19983e+09",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39997",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78575",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78575",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78575",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.439+0000 I SHARDING [conn1] heejin_ return: 39997",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872712'), key: 49997.0 } ] }",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872712'), key: 49997.0 } ] }",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872712'), key: 49997.0 } }",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872712'), key: 49997.0 }",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49997",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39998",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.440+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] heejjin splitIFNEED: 49997",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] heejjin get split sum : 1.19988e+09",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39998",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78610",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78610",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78610",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] heejin_ return: 39998",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.441+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872713'), key: 49998.0 } ] }",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872713'), key: 49998.0 } ] }",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872713'), key: 49998.0 } }",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872713'), key: 49998.0 }",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49998",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 39999",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.442+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejjin splitIFNEED: 49998",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejjin get split sum : 1.19993e+09",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 39999",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78645",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78645",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78645",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejin_ return: 39999",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] jinnnn ClusterWriter::write newDB.newCol",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] jin endpoints during shard request: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872714'), key: 49999.0 } ] }",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] jin endpoints during shard response: { insert: \"newCol\", bypassDocumentValidation: false, ordered: true, documents: [ { _id: ObjectId('5ee89a8c123e755131872714'), key: 49999.0 } ] }",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] jin endpoints during shard response nField: 4",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] jin element in!!!!!",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] jin endpoints during shard response getOwned: { 0: { _id: ObjectId('5ee89a8c123e755131872714'), key: 49999.0 } }",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] jin endpoints during shard response getObject(zero): 0: { _id: ObjectId('5ee89a8c123e755131872714'), key: 49999.0 }",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] jin endpoints during shard response getObject(key): 49999",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, globalINT : 40000",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, numWritOps : 1",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writes count : 0",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, writeSizeBytes : 42",
		"2020-06-16T10:10:20.443+0000 I SHARDING [conn1] heejins order : BatchWriteOp::targetBatch, : getWriteSizeBytes(writeOp)35",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] heejin) findIntersectingChunk",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] heejjin splitIFNEED: 49999",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] heejjin get split sum : 1.19998e+09",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] jin!!! updateChunkWriteStatsAndSplitIfNeeded: 40000",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] jin!!! addBytesWritten(dataWritten) 35",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] jin!!! addBytesWritten(chunkBytesWritten) 78680",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78680",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] heejjin error 1: 1048576",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] heejjin error 1: minIsInf",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] heejjin error 1 : maxIsInf",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] heejjin shouldSplit datawrittenbytes: 78680",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] heejjin shouldSplit jumbo: 0",
		"2020-06-16T10:10:20.444+0000 I SHARDING [conn1] heejin_ return: 40000",
		"2020-06-16T10:10:23.778+0000 I SHARDING [Uptime reporter]  Shard::runBatchWriteCommand config",
		"2020-06-16T10:10:23.858+0000 I SHARDING [Uptime reporter] WRITE DONE??? ",
		"2020-06-16T10:10:33.860+0000 I SHARDING [Uptime reporter]  Shard::runBatchWriteCommand config",
		"2020-06-16T10:10:33.893+0000 I SHARDING [Uptime reporter] WRITE DONE??? ",
		"2020-06-16T10:10:43.895+0000 I SHARDING [Uptime reporter]  Shard::runBatchWriteCommand config",
		"2020-06-16T10:10:43.949+0000 I SHARDING [Uptime reporter] WRITE DONE??? ",
		"2020-06-16T10:10:53.951+0000 I SHARDING [Uptime reporter]  Shard::runBatchWriteCommand config",
		"2020-06-16T10:10:53.996+0000 I SHARDING [Uptime reporter] WRITE DONE??? ",
		"2020-06-16T10:11:03.999+0000 I SHARDING [Uptime reporter]  Shard::runBatchWriteCommand config",
		"2020-06-16T10:11:04.036+0000 I SHARDING [Uptime reporter] WRITE DONE??? ",
		"2020-06-16T10:11:14.039+0000 I SHARDING [Uptime reporter]  Shard::runBatchWriteCommand config",
		"2020-06-16T10:11:14.063+0000 I SHARDING [Uptime reporter] WRITE DONE??? "
	],
	"ok" : 1,
	"operationTime" : Timestamp(1592302283, 1),
	"$clusterTime" : {
		"clusterTime" : Timestamp(1592302283, 1),
		"signature" : {
			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
			"keyId" : NumberLong(0)
		}
	}
}
mongos> [9G[J[9G^C
bye
